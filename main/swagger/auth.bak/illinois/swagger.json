{
  "swagger": "2.0",
  "info": {
    "description": "The Application",
    "version": "1.0",
    "title": "Auth API",
    "contact": {
      "name": "users@cxf.apache.org"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Lottery Configuration"
    },
    {
      "name": "Application Configuration"
    },
    {
      "name": "Application Management"
    },
    {
      "name": "Account Management"
    },
    {
      "name": "Permission Management"
    },
    {
      "name": "System Configuration"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "User Management"
    }
  ],
  "paths": {
    "/auth/api/v1.0/applications": {
      "get": {
        "tags": [
          "Application Management"
        ],
        "summary": "List of applications",
        "description": "",
        "operationId": "findApplications",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "name"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageApplicationDTO"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application Management"
        ],
        "summary": "Register application",
        "description": "",
        "operationId": "registerApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Management"
        ],
        "summary": "Delete applications",
        "description": "",
        "operationId": "deleteApplications",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/cultures/{id}": {
      "get": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Retrieve culture",
        "description": "",
        "operationId": "getCulture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Culture"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Update culture",
        "description": "",
        "operationId": "updateCulture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Culture"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Culture"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Delete culture",
        "description": "",
        "operationId": "deleteCulture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/permissions/access}": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Evaluate permission for a given http method - path",
        "description": "",
        "operationId": "hasPermission",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/permissions/{id}": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Retrieve permission",
        "description": "",
        "operationId": "getPermission",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PermissionDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Update permission",
        "description": "",
        "operationId": "updatePermission",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionUpdateRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PermissionDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Delete permission",
        "description": "",
        "operationId": "deletePermission",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/cultures": {
      "get": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Retrieve cultures",
        "description": "",
        "operationId": "getCultures",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "id"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Culture"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Register culture",
        "description": "",
        "operationId": "registerCulture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Culture"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Culture"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/operations/meta": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Get Clients Channels and Operators meta data",
        "description": "",
        "operationId": "getOperationMeta",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/api/v1.0/system/configuration/password-policy": {
      "get": {
        "tags": [
          "System Configuration"
        ],
        "summary": "Retrieve password policy",
        "description": "",
        "operationId": "getPasswordPolicy",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PasswordPolicy"
            }
          }
        }
      },
      "put": {
        "tags": [
          "System Configuration"
        ],
        "summary": "Update password policy",
        "description": "",
        "operationId": "updatePasswordPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PasswordPolicy"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}/password-resets": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve user's reset password history",
        "description": "",
        "operationId": "getResetPasswordHistory",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_ResetPasswordToken"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Reset user password",
        "description": "",
        "operationId": "resetPassword",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/_ResetPasswordToken"
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Grant authorization token",
        "description": "\n This call provides the authorization token that it is required to access the exposed API calls\n Response to an API call request sent without a valid token will be HTTP 401.\n Along with the bearer token, the Authentication endpoint returns the number of seconds before the token expires.\n Rest of the returned fields:\n - jti,\n - scope,\n - token_type\n\n are supplied in compliance with the **RFC 7519** (not required to be further processed/used by the client)\n Acquired *access_token* should be preceded with 'Bearer ' value in order to form the final **Bearer authentication token** to be placed in the authorization header parameter of the required call.\n\n E.g. for the following response of authorization call:\n\n ```javascript\n {\n \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6I\",\n \"token_type\": \"bearer\",\n \"expires_in\": 71999,\n \"scope\": \"openid\",\n \"jti\": \"82d85f0a-5e1a-4ea3-90d3-2ce6cc4969de\"\n }\n ```\n\n Authorization header parameter for the required call API should be filled with the following value:\n\n **Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6I**\n ",
        "operationId": "token",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "grant_type",
            "in": "formData",
            "description": "The type of the authorization grant (password, refresh_token, client_credentials, authorization_code)",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke the given token",
        "description": "",
        "operationId": "revokeToken",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/my-applications": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "retrieve authenticated user applications",
        "description": "",
        "operationId": "getMyApplications",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserApplicationDTO"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/my-translations": {
      "get": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Retrieve all translations by culture",
        "description": "",
        "operationId": "getTranslations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/refresh_token": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revoke the given refresh token",
        "description": "",
        "operationId": "revokeRefreshToken",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/applications/{id}/roles": {
      "get": {
        "tags": [
          "Application Management"
        ],
        "summary": "Retrieve application roles",
        "description": "",
        "operationId": "getApplicationRoles",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "order"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageApplicationRole"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application Management"
        ],
        "summary": "Add application role",
        "description": "",
        "operationId": "registerRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "Application Management"
        ],
        "summary": "Remove application roles by role name",
        "description": "",
        "operationId": "deleteRolesByName",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/channels/{id}": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Channel",
        "description": "",
        "operationId": "getChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Update Channel",
        "description": "",
        "operationId": "updateChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Remove Channel",
        "description": "",
        "operationId": "deleteChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/my-account/password": {
      "put": {
        "tags": [
          "Account Management"
        ],
        "summary": "Change user password",
        "description": "",
        "operationId": "changeMyPassword",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "oldPassword",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/translations/{cultureId}/{key}": {
      "get": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Retrieve translation",
        "description": "",
        "operationId": "getTranslation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cultureId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Update translation",
        "description": "",
        "operationId": "updateTranslation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cultureId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Delete translation",
        "description": "",
        "operationId": "deleteTranslation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cultureId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/clients/{id}": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Client",
        "description": "",
        "operationId": "getClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Update Client",
        "description": "",
        "operationId": "updateClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Remove Client",
        "description": "",
        "operationId": "deleteClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retieve a page of users",
        "description": "",
        "operationId": "findUsers",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userType",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "authority",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "lastName"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageUserDTO"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Register user",
        "description": "",
        "operationId": "registerUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete users",
        "description": "",
        "operationId": "deleteUsers",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/operations": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Operator Client and Channels",
        "description": "",
        "operationId": "getOperatorClientChannels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperatorClientChannel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Update Operator Client Channel",
        "description": "",
        "operationId": "registerOperatorClientChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OperatorClientChannelRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperatorClientChannel"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/operators/{id}": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Client",
        "description": "",
        "operationId": "getOperator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperatorDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Update Operator",
        "description": "",
        "operationId": "updateOperator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OperatorUpdateRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperatorDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Remove Operator",
        "description": "",
        "operationId": "deleteOperator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}/unlock": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Unlock user",
        "description": "",
        "operationId": "unlockUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/applications/{id}/roles/{roleId}": {
      "put": {
        "tags": [
          "Application Management"
        ],
        "summary": "Update application role",
        "description": "",
        "operationId": "updateRole",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleUpdateRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "Application Management"
        ],
        "summary": "Remove application role",
        "description": "",
        "operationId": "deleteRole",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/clients": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Clients",
        "description": "",
        "operationId": "findAllClients",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "description"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Client"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Register Client",
        "description": "",
        "operationId": "registerClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}/roles": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Add a new user role",
        "description": "",
        "operationId": "addUserRole",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/operations/{id}": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Operator Client Channel",
        "description": "",
        "operationId": "getOperatorClientChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperatorClientChannel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Update Operator Client Channel",
        "description": "",
        "operationId": "updateOperatorClientChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OperatorClientChannelUpdateRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperatorClientChannel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Remove Operator Client Channel",
        "description": "",
        "operationId": "deleteOperatorClientChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/oauth/check_token": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate the given token",
        "description": "",
        "operationId": "checkToken",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}/status": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user status",
        "description": "",
        "operationId": "updateUserStatus",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/my-account/password/resets/{token}": {
      "put": {
        "tags": [
          "Account Management"
        ],
        "summary": "Change password",
        "description": "",
        "operationId": "changePassword",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}/roles/{roleId}": {
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Remove user role",
        "description": "",
        "operationId": "removeUserRole",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/channels": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Channels",
        "description": "",
        "operationId": "findAllChannels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "description"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Register Channel",
        "description": "",
        "operationId": "registerChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/user": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "retrieve authenticated user profile",
        "description": "",
        "operationId": "getMyProfile",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/my-account/password/resets": {
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Reset password",
        "description": "",
        "operationId": "forgotPassword",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/_ResetPasswordToken"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}/password": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Change user password",
        "description": "",
        "operationId": "changeUserPassword",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "oldPassword",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/applications/{id}": {
      "get": {
        "tags": [
          "Application Management"
        ],
        "summary": "Retrieve application",
        "description": "",
        "operationId": "getApplication",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application Management"
        ],
        "summary": "Update application",
        "description": "",
        "operationId": "updateApplication",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Management"
        ],
        "summary": "Delete application",
        "description": "",
        "operationId": "deleteApplication",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/permissions": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "list of permissions",
        "description": "",
        "operationId": "findPermissions",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PermissionDTO"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Register permission",
        "description": "",
        "operationId": "registerPermission",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PermissionDTO"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/translations": {
      "get": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Retrieve translations",
        "description": "",
        "operationId": "findTranslations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cultureId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageTranslation"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application Configuration"
        ],
        "summary": "Register translation",
        "description": "",
        "operationId": "registerTranslation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TranslationRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/users/{id}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve user",
        "description": "",
        "operationId": "getUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user",
        "description": "",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete user",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/api/v1.0/configuration/operators": {
      "get": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Retrieve Operators",
        "description": "",
        "operationId": "getAllOperators",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc"
          },
          {
            "name": "column",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "description"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperatorDTO"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lottery Configuration"
        ],
        "summary": "Register Operator",
        "description": "",
        "operationId": "registerOperator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OperatorRegistrationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperatorDTO"
            }
          }
        }
      }
    },
    "/auth/api/v1.0/users/{email}/pgp-key": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Retrieve user pgp key",
        "description": "",
        "operationId": "getPgpKey",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/oauth/token_key": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get the verification key for jwt token signatures",
        "description": "",
        "operationId": "getTokenKey",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TokenKey"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Client": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Culture": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 5,
          "maxLength": 5
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        }
      }
    },
    "Operator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      }
    },
    "OperatorClientChannel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "channel": {
          "$ref": "#/definitions/Channel"
        },
        "client": {
          "$ref": "#/definitions/Client"
        }
      }
    },
    "OperatorClientChannelRegistrationRequest": {
      "type": "object",
      "required": [
        "channelId",
        "clientId",
        "operatorId"
      ],
      "properties": {
        "channelId": {
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "type": "integer",
          "format": "int32"
        },
        "operatorId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OperatorClientChannelUpdateRequest": {
      "type": "object",
      "properties": {
        "channelId": {
          "type": "integer",
          "format": "int32"
        },
        "clientId": {
          "type": "integer",
          "format": "int32"
        },
        "operatorId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OperatorDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "OperatorUpdateRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "OperatorRegistrationRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "TranslationRegistrationRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "cultures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Translation": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/TranslationId"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "TranslationId": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "cultureId": {
          "type": "string"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PageTranslation": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Translation"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Sort": {
      "type": "object"
    },
    "ApplicationDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "accessTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "additionalInformation": {
          "type": "string"
        },
        "authorities": {
          "type": "string"
        },
        "grantTypes": {
          "type": "string"
        },
        "refreshTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "resourceIds": {
          "type": "string"
        },
        "scopes": {
          "type": "string"
        },
        "redirectUris": {
          "type": "string"
        },
        "autoApprove": {
          "type": "string"
        },
        "statelessTokenEnabled": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationRole"
          }
        },
        "external": {
          "type": "boolean"
        }
      }
    },
    "ApplicationRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApplicationRegistrationRequest": {
      "type": "object",
      "required": [
        "description",
        "name",
        "secret"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "accessTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "additionalInformation": {
          "type": "string"
        },
        "authorities": {
          "type": "string"
        },
        "grantTypes": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "refreshTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "resourceIds": {
          "type": "string"
        },
        "scopes": {
          "type": "string"
        },
        "redirectUris": {
          "type": "string"
        },
        "autoApprove": {
          "type": "string"
        },
        "external": {
          "type": "boolean"
        },
        "statelessTokenEnabled": {
          "type": "boolean"
        }
      }
    },
    "ApplicationUpdateRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "accessTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "additionalInformation": {
          "type": "string"
        },
        "authorities": {
          "type": "string"
        },
        "grantTypes": {
          "type": "string"
        },
        "refreshTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "resourceIds": {
          "type": "string"
        },
        "scopes": {
          "type": "string"
        },
        "redirectUris": {
          "type": "string"
        },
        "autoApprove": {
          "type": "string"
        },
        "external": {
          "type": "boolean"
        },
        "statelessTokenEnabled": {
          "type": "boolean"
        }
      }
    },
    "PageApplicationRole": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationRole"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RoleUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "maximum": 999
        }
      }
    },
    "RoleRegistrationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "maximum": 999
        }
      }
    },
    "PageApplicationDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationDTO"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserApplicationDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "_ResetPasswordToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "issued": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "accountLocked": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fatherName": {
          "type": "string"
        },
        "motherName": {
          "type": "string"
        },
        "phonePrimary": {
          "type": "string"
        },
        "phoneSecondary": {
          "type": "string"
        },
        "phoneMobile": {
          "type": "string"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "failures": {
          "type": "integer",
          "format": "int32"
        },
        "userType": {
          "type": "integer",
          "format": "int32"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "lockedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastPasswordUpdateDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastLoginDate": {
          "type": "string",
          "format": "date-time"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "langId": {
          "type": "string"
        },
        "lotteryBranchCode": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "pgpKey": {
          "type": "string"
        },
        "accessTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time"
        },
        "personalId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "authorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGrantedAuthority"
          }
        },
        "operators": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "UserGrantedAuthority": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PermissionDTO": {
      "type": "object",
      "required": [
        "expression",
        "id",
        "methods",
        "path"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "PermissionRegistrationRequest": {
      "type": "object",
      "required": [
        "expression",
        "methods",
        "path"
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "PermissionUpdateRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "PasswordCharacterRule": {
      "type": "object",
      "required": [
        "characters"
      ],
      "properties": {
        "characters": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      }
    },
    "PasswordInvalidSequenceRule": {
      "type": "object",
      "required": [
        "characters"
      ],
      "properties": {
        "characters": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      }
    },
    "PasswordPolicy": {
      "type": "object",
      "required": [
        "maxLength",
        "maxResetsHistory",
        "minLength"
      ],
      "properties": {
        "minLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "characterRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCharacterRule"
          }
        },
        "whiteSpaceAllowed": {
          "type": "boolean"
        },
        "invalidSequenceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordInvalidSequenceRule"
          }
        },
        "invalidRepeatedCharactersLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 3
        },
        "regex": {
          "type": "string"
        },
        "maxResetsHistory": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "required": [
        "access_token",
        "expires_in",
        "scope",
        "token_type"
      ],
      "properties": {
        "scope": {
          "type": "string",
          "description": "the scope of the generated token (space separated)"
        },
        "jti": {
          "type": "string",
          "description": "the jti (JWT ID) claim in case of JWT token"
        },
        "access_token": {
          "type": "string",
          "description": "the generated authorization token"
        },
        "token_type": {
          "type": "string",
          "description": "the type of the generated token"
        },
        "refresh_token": {
          "type": "string",
          "description": "the token used to refresh current token. Applicable for grant types: password, client_credentials, authorization_code"
        },
        "expires_in": {
          "type": "integer",
          "format": "int32",
          "description": "the time in seconds of the duration of the token"
        }
      }
    },
    "TokenKey": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "alg": {
          "type": "string"
        }
      }
    },
    "PageUserDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDTO"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserRegistrationRequest": {
      "type": "object",
      "required": [
        "email",
        "password",
        "username"
      ],
      "properties": {
        "operators": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fatherName": {
          "type": "string"
        },
        "motherName": {
          "type": "string"
        },
        "phonePrimary": {
          "type": "string"
        },
        "phoneSecondary": {
          "type": "string"
        },
        "phoneMobile": {
          "type": "string"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "userType": {
          "type": "integer",
          "format": "int32"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "langId": {
          "type": "string"
        },
        "lotteryBranchCode": {
          "type": "integer",
          "format": "int32"
        },
        "pgpKey": {
          "type": "string"
        },
        "accessTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "personalId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "authorities": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "operators": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fatherName": {
          "type": "string"
        },
        "motherName": {
          "type": "string"
        },
        "phonePrimary": {
          "type": "string"
        },
        "phoneSecondary": {
          "type": "string"
        },
        "phoneMobile": {
          "type": "string"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time"
        },
        "userType": {
          "type": "integer",
          "format": "int32"
        },
        "currencyId": {
          "type": "integer",
          "format": "int32"
        },
        "langId": {
          "type": "string"
        },
        "lotteryBranchCode": {
          "type": "integer",
          "format": "int32"
        },
        "pgpKey": {
          "type": "string"
        },
        "accessTokenValiditySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "personalId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "authorities": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
