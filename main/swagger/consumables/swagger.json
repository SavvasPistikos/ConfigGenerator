{
  "swagger" : "2.0",
  "info" : {
    "description" : "The Application",
    "version" : "1.0.0",
    "title" : "Sample REST Application",
    "contact" : {
      "name" : "users@cxf.apache.org"
    }
  },
  "basePath" : "/api/v1.0",
  "tags" : [ {
    "name" : "Consumable Categories Configuration"
  }, {
    "name" : "Consumables Configuration"
  }, {
    "name" : "Game Family Configuration"
  }, {
    "name" : "Loyalty Profiles Configuration"
  }, {
    "name" : "Products Configuration"
  }, {
    "name" : "Ticket Categories Configuration"
  }, {
    "name" : "Tickets Configuration"
  }, {
    "name" : "Ticket Status Configuration"
  } ],
  "paths" : {
    "/consumables/categories/{id}" : {
      "get" : {
        "tags" : [ "Consumable Categories Configuration" ],
        "summary" : "Retrieve a single consumable category",
        "description" : "Retrieve a single consumable category",
        "operationId" : "getConsumableCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The consumable category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConsumableCategoryDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Consumable Categories Configuration" ],
        "summary" : "Update a consumable category",
        "description" : "Update a consumable category",
        "operationId" : "updateConsumableCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The consumable category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The consumable category update request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConsumableCategoryDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Consumable Categories Configuration" ],
        "summary" : "Delete a consumable category",
        "description" : "Delete a consumable category",
        "operationId" : "deleteConsumableCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The consumable category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/consumables/categories" : {
      "get" : {
        "tags" : [ "Consumable Categories Configuration" ],
        "summary" : "Retrieve a page of all consumable categories",
        "description" : "Retrieve a page of all consumable categories",
        "operationId" : "findAllConsumableCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConsumableCategoryDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Consumable Categories Configuration" ],
        "summary" : "Register a new consumable category",
        "description" : "Register a new consumable category",
        "operationId" : "registerConsumableCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The consumable category registration request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConsumableCategoryDTO"
            }
          }
        }
      }
    },
    "/consumables" : {
      "get" : {
        "tags" : [ "Consumables Configuration" ],
        "summary" : "Retrieve a page of all consumables",
        "description" : "Retrieve a page of all consumables",
        "operationId" : "findAllConsumables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "categoryId",
          "in" : "query",
          "description" : "The consumable category id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The consumable status (0 -> INACTIVE, 1 -> ACTIVE)",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "column",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "id"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PageConsumableDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Consumables Configuration" ],
        "summary" : "Register a new consumable",
        "description" : "Register a new consumable",
        "operationId" : "registerConsumable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The consumable registration request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConsumableDTO"
            }
          }
        }
      }
    },
    "/consumables/{id}" : {
      "get" : {
        "tags" : [ "Consumables Configuration" ],
        "summary" : "Retrieve a single consumable",
        "description" : "Retrieve a single consumable",
        "operationId" : "getConsumable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The consumable id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConsumableDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Consumables Configuration" ],
        "summary" : "Update a consumable",
        "description" : "\n Update a consumable\n\n Possible error codes:\n\n| *Code*|                *Description*                             |\n|-------|----------------------------------------------------------|\n| 10003  |\tConsumable already in use                 |\n|",
        "operationId" : "updateConsumable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The consumable id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The consumable update request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConsumableDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Consumables Configuration" ],
        "summary" : "Delete a consumable",
        "description" : "Delete a consumable",
        "operationId" : "deleteConsumable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The consumable id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/consumables/bulk" : {
      "post" : {
        "tags" : [ "Consumables Configuration" ],
        "summary" : "Upload consumables",
        "description" : "Upload consumables",
        "operationId" : "bulkInsertConsumables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/The consumable bulk item"
            }
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/The consumable bulk insert response"
            }
          }
        }
      }
    },
    "/game-families" : {
      "get" : {
        "tags" : [ "Game Family Configuration" ],
        "summary" : "Retrieve Game Families",
        "description" : "",
        "operationId" : "findGameFamilies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GameFamily"
              }
            }
          }
        }
      }
    },
    "/loyalty/profiles" : {
      "get" : {
        "tags" : [ "Loyalty Profiles Configuration" ],
        "summary" : "Retrieve a page of all Loyalty Profiles",
        "description" : "",
        "operationId" : "findAllLoyaltyProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "column",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "id"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PageLoyaltyProfileDTO"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Loyalty Profiles Configuration" ],
        "summary" : "Register a new Loyalty Profile",
        "description" : "",
        "operationId" : "registerLoyaltyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LoyaltyProfileRegistrationRequest"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LoyaltyProfileDTO"
            }
          }
        }
      }
    },
    "/loyalty/profiles/{id}" : {
      "get" : {
        "tags" : [ "Loyalty Profiles Configuration" ],
        "summary" : "Retrieve a single Loyalty Profile",
        "description" : "",
        "operationId" : "getLoyaltyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LoyaltyProfileDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Loyalty Profiles Configuration" ],
        "summary" : "Update a Loyalty Profile",
        "description" : "",
        "operationId" : "updateLoyaltyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LoyaltyProfileUpdateRequest"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LoyaltyProfileDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Loyalty Profiles Configuration" ],
        "summary" : "Delete a Loyalty Profile",
        "description" : "",
        "operationId" : "deleteLoyaltyProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "Products Configuration" ],
        "summary" : "Retrieve a page of all products",
        "description" : "",
        "operationId" : "findProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "column",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PageProduct"
            }
          }
        }
      }
    },
    "/tickets/categories" : {
      "get" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Retrieve a page of all ticket categories",
        "description" : "Retrieve a page of all ticket categories",
        "operationId" : "findAllTicketCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The ticket category type",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TicketCategoryDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Register a new ticket category",
        "description" : "Register a new ticket category",
        "operationId" : "registerTicketCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The ticket category registration request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketCategoryDTO"
            }
          }
        }
      }
    },
    "/tickets/categories/{id}" : {
      "get" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Retrieve a single ticket category",
        "description" : "Retrieve a single ticket category",
        "operationId" : "getTicketCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketCategoryDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Update a ticket category",
        "description" : "Update a ticket category",
        "operationId" : "updateTicketCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TicketCategoryUpdateRequest"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketCategoryDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Delete a ticket category",
        "description" : "Delete a ticket category",
        "operationId" : "deleteTicketCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tickets/categories/{id}/sub-categories" : {
      "get" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Retrieve subcategories for a ticket category",
        "description" : "Retrieve subcategories for a ticket category",
        "operationId" : "getTicketCategorySubCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TicketSubCategoryDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Register a new subcategory for a ticket category",
        "description" : "Register a new subcategory for a ticket category",
        "operationId" : "registerTicketCategorySubCategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The subcategory registration request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketSubCategoryDTO"
            }
          }
        }
      }
    },
    "/tickets/categories/{id}/sub-categories/{subCatId}" : {
      "get" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Retrieve a subcategory for a ticket category",
        "description" : "Retrieve a subcategory for a ticket category",
        "operationId" : "getTicketCategorySubCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "subCatId",
          "in" : "path",
          "description" : "The subcategory id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketSubCategoryDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Update a subcategory for a ticket category",
        "description" : "Update a subcategory for a ticket category",
        "operationId" : "updateTicketCategorySubCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "subCatId",
          "in" : "path",
          "description" : "The subcategory id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The subcategory update request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketSubCategoryDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Delete a subcategory for a ticket category",
        "description" : "Delete a subcategory for a ticket category",
        "operationId" : "deleteTicketCategorySubCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket category id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "subCatId",
          "in" : "path",
          "description" : "The subcategory id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tickets/categories/bulk" : {
      "post" : {
        "tags" : [ "Ticket Categories Configuration" ],
        "summary" : "Upload consumables",
        "description" : "Upload consumables",
        "operationId" : "bulkInsertConsumables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TicketCategoryBulkItem"
            }
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/The consumable bulk insert response"
            }
          }
        }
      }
    },
    "/tickets/{id}" : {
      "get" : {
        "tags" : [ "Tickets Configuration" ],
        "summary" : "Retrieve a single ticket",
        "description" : "Retrieve a single ticket",
        "operationId" : "getTicket",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Tickets Configuration" ],
        "summary" : "Update a ticket",
        "description" : "\n Update a ticket\n\n Possible error codes:\n\n| *Code*|                *Description*                             |\n|-------|----------------------------------------------------------|\n| 10002  |\tUnable to update closed ticket                 |\n|",
        "operationId" : "updateTicket",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The ticket update request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Tickets Configuration" ],
        "summary" : "Delete a ticket",
        "description" : "Delete a ticket",
        "operationId" : "deleteTicket",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tickets" : {
      "get" : {
        "tags" : [ "Tickets Configuration" ],
        "summary" : "Retrieve a page of all tickets",
        "description" : "Retrieve a page of all tickets",
        "operationId" : "findTickets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "insertedFrom",
          "in" : "query",
          "description" : "The inserted start date",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "insertedTo",
          "in" : "query",
          "description" : "The inserted end date",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "resolvedFrom",
          "in" : "query",
          "description" : "The resolved start date",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "resolvedTo",
          "in" : "query",
          "description" : "The resolved end date",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "retailerId",
          "in" : "query",
          "description" : "The ticket retailer id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "statusId",
          "in" : "query",
          "description" : "The ticket status id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The ticket type",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "The ticket keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "column",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "id"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Tickets Configuration" ],
        "summary" : "Register a new ticket",
        "description" : "Register a new ticket",
        "operationId" : "registerTicket",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The ticket registration request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketDTO"
            }
          }
        }
      }
    },
    "/tickets/statuses/{id}" : {
      "get" : {
        "tags" : [ "Ticket Status Configuration" ],
        "summary" : "Retrieve a single ticket status",
        "description" : "Retrieve a single ticket status",
        "operationId" : "getTicketStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket status id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketStatusDTO"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Ticket Status Configuration" ],
        "summary" : "Update a ticket status",
        "description" : "Update a ticket status",
        "operationId" : "updateTicketStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket status id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The ticket status update request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketStatusDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Ticket Status Configuration" ],
        "summary" : "Delete a ticket status",
        "description" : "\n Delete a ticket status\n\n Possible error codes:\n\n| *Code*|                *Description*                             |\n|-------|----------------------------------------------------------|\n| 10002  |\tCan not delete built in ticket status                 |\n|",
        "operationId" : "deleteTicketStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ticket status id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tickets/statuses" : {
      "get" : {
        "tags" : [ "Ticket Status Configuration" ],
        "summary" : "Retrieve a page of all ticket statuses",
        "description" : "Retrieve a page of all ticket statuses",
        "operationId" : "findAllTicketStatuses",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TicketStatusDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Ticket Status Configuration" ],
        "summary" : "Register a new ticket status",
        "description" : "Register a new ticket status",
        "operationId" : "registerTicketStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/The ticket status registration request"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TicketStatusDTO"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ConsumableCategoryDTO" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable category id"
        },
        "name" : {
          "type" : "string",
          "description" : "The consumable category name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "The consumable category registration request" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The consumable category name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "The consumable category update request" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The consumable category name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "ConsumableDTO" : {
      "type" : "object",
      "required" : [ "categoryId", "id", "inserted", "price", "status", "title" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable id"
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable category id"
        },
        "title" : {
          "type" : "string",
          "description" : "The consumable title",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The consumable description",
          "minLength" : 1,
          "maxLength" : 128
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable status",
          "minimum" : 0,
          "maximum" : 1
        },
        "supplier" : {
          "type" : "string",
          "description" : "The consumable supplier"
        },
        "partNumber" : {
          "type" : "string",
          "description" : "The consumable part number"
        },
        "price" : {
          "type" : "number",
          "description" : "The consumable price"
        },
        "inserted" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The consumable inserted date"
        }
      }
    },
    "Page" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "last" : {
          "type" : "boolean"
        },
        "first" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageConsumableDTO" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "last" : {
          "type" : "boolean"
        },
        "first" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConsumableDTO"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Sort" : {
      "type" : "object"
    },
    "The consumable registration request" : {
      "type" : "object",
      "required" : [ "categoryId", "price", "status", "title" ],
      "properties" : {
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable category id"
        },
        "title" : {
          "type" : "string",
          "description" : "The consumable title",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The consumable description",
          "minLength" : 0,
          "maxLength" : 128
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable status (0 -> INACTIVE, 1 -> ACTIVE)",
          "minimum" : 0,
          "maximum" : 1
        },
        "supplier" : {
          "type" : "string",
          "description" : "The consumable supplier"
        },
        "partNumber" : {
          "type" : "string",
          "description" : "The consumable part number"
        },
        "price" : {
          "type" : "number",
          "description" : "The consumable price"
        }
      }
    },
    "The consumable update request" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable category id"
        },
        "title" : {
          "type" : "string",
          "description" : "The consumable title",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The consumable description",
          "minLength" : 0,
          "maxLength" : 128
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The consumable status (0 -> INACTIVE, 1 -> ACTIVE)",
          "minimum" : 0,
          "maximum" : 1
        },
        "supplier" : {
          "type" : "string",
          "description" : "The consumable supplier"
        },
        "partNumber" : {
          "type" : "string",
          "description" : "The consumable part number"
        },
        "price" : {
          "type" : "number",
          "description" : "The consumable price"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "info" : {
          "type" : "object"
        }
      }
    },
    "The consumable bulk insert response" : {
      "type" : "object",
      "properties" : {
        "errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        }
      }
    },
    "The consumable bulk item" : {
      "type" : "object",
      "required" : [ "categoryName", "price", "status", "title" ],
      "properties" : {
        "categoryName" : {
          "type" : "string",
          "description" : "The consumable category name"
        },
        "title" : {
          "type" : "string",
          "description" : "The consumable title",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The consumable description",
          "minLength" : 1,
          "maxLength" : 128
        },
        "status" : {
          "type" : "string",
          "description" : "The consumable status",
          "pattern" : "0|1"
        },
        "supplier" : {
          "type" : "string",
          "description" : "The consumable supplier"
        },
        "partNumber" : {
          "type" : "string",
          "description" : "The consumable part number"
        },
        "price" : {
          "type" : "string"
        }
      }
    },
    "Game" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "GameFamily" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "games" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Game"
          }
        }
      }
    },
    "LoyaltyPoint" : {
      "type" : "object",
      "required" : [ "credits", "gameId", "points" ],
      "properties" : {
        "gameId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "points" : {
          "type" : "integer",
          "format" : "int64"
        },
        "credits" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "LoyaltyProfileDTO" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        },
        "points" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoyaltyPoint"
          }
        }
      }
    },
    "PageLoyaltyProfileDTO" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "last" : {
          "type" : "boolean"
        },
        "first" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoyaltyProfileDTO"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LoyaltyPoint_" : {
      "type" : "object",
      "required" : [ "credits", "gameId", "points" ],
      "properties" : {
        "gameId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "points" : {
          "type" : "integer",
          "format" : "int64"
        },
        "credits" : {
          "type" : "number"
        }
      }
    },
    "LoyaltyProfileRegistrationRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        },
        "points" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoyaltyPoint_"
          }
        }
      }
    },
    "LoyaltyProfileUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        },
        "points" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoyaltyPoint_"
          }
        }
      }
    },
    "PageProduct" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "last" : {
          "type" : "boolean"
        },
        "first" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Product"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        }
      }
    },
    "TicketCategoryDTO" : {
      "type" : "object",
      "required" : [ "id", "name", "type" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category id"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category type"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket category name",
          "minLength" : 1,
          "maxLength" : 64
        },
        "subCategories" : {
          "type" : "array",
          "description" : "The ticket sub categories",
          "items" : {
            "$ref" : "#/definitions/TicketSubCategoryDTO"
          }
        }
      }
    },
    "TicketSubCategoryDTO" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket sub category id"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket sub category name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "The ticket category registration request" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category type"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket category name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "TicketCategoryUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category name"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket category type",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "The subcategory registration request" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The subcategory name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "TicketCategoryBulkItem" : {
      "type" : "object",
      "required" : [ "categoryName", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The ticket category type",
          "pattern" : "inquiry|request|troubleshoot|complaint|order"
        },
        "categoryName" : {
          "type" : "string",
          "description" : "The ticket category name",
          "minLength" : 1,
          "maxLength" : 64
        },
        "subCategoryName" : {
          "type" : "string",
          "description" : "The ticket sub category name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "The subcategory update request" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The subcategory name",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "OrderItem" : {
      "type" : "object",
      "required" : [ "basePrice", "consumableId", "description", "price", "quantity", "type" ],
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item type"
        },
        "consumableId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item consumable id"
        },
        "description" : {
          "type" : "string",
          "description" : "The order item description"
        },
        "price" : {
          "type" : "number",
          "description" : "The order item price"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item quantity"
        },
        "basePrice" : {
          "type" : "number",
          "description" : "The order item base price"
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item category id"
        },
        "categoryDescription" : {
          "type" : "string",
          "description" : "The order item category description"
        }
      }
    },
    "TicketDTO" : {
      "type" : "object",
      "required" : [ "categoryDescription", "categoryId", "id", "inserted", "name", "priority", "retailerId", "statusId", "type", "userId" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket id"
        },
        "retailerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket retailer id"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket user id"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket type"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket name",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The ticket description",
          "minLength" : 0,
          "maxLength" : 128
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category"
        },
        "categoryDescription" : {
          "type" : "string",
          "description" : "The ticket category description"
        },
        "subCategoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket sub category"
        },
        "subCategoryDescription" : {
          "type" : "string",
          "description" : "The ticket sub category description"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket priority"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket status"
        },
        "inserted" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The ticket inserted date"
        },
        "resolved" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The ticket resolved date"
        },
        "items" : {
          "type" : "array",
          "description" : "The ticket order items",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          }
        }
      }
    },
    "TicketPage" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TicketDTO"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "previousPage" : {
          "type" : "boolean"
        },
        "first" : {
          "type" : "boolean"
        },
        "nextPage" : {
          "type" : "boolean"
        },
        "last" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        }
      }
    },
    "Complaint" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The ticket registration request"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "ConsumableOrderItemReg" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The order item"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "Inquiry" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The ticket registration request"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "Order" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The ticket registration request"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "ProductOrderItemReg" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The order item"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "Request" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The ticket registration request"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "The order item" : {
      "type" : "object",
      "required" : [ "consumableId", "quantity", "type" ],
      "discriminator" : "type",
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item type"
        },
        "consumableId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item consumable id"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The order item quantity"
        }
      }
    },
    "The ticket registration request" : {
      "type" : "object",
      "required" : [ "name", "priority", "retailerId", "statusId", "type", "userId" ],
      "discriminator" : "type",
      "properties" : {
        "retailerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket retailer id"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket user id"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket type"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket name",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The ticket description",
          "minLength" : 0,
          "maxLength" : 128
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category"
        },
        "subCategoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket sub category"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket priority"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket status"
        },
        "items" : {
          "type" : "array",
          "description" : "The ticket order items",
          "items" : {
            "$ref" : "#/definitions/The order item"
          }
        }
      }
    },
    "Troubleshoot" : {
      "allOf" : [ {
        "$ref" : "#/definitions/The ticket registration request"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "The ticket update request" : {
      "type" : "object",
      "properties" : {
        "retailerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket retailer id"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket user id"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string",
          "description" : "The ticket name",
          "minLength" : 1,
          "maxLength" : 64
        },
        "description" : {
          "type" : "string",
          "description" : "The ticket description",
          "minLength" : 0,
          "maxLength" : 128
        },
        "categoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket category"
        },
        "subCategoryId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket sub category"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket priority"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ticket status"
        },
        "items" : {
          "type" : "array",
          "description" : "The ticket order items",
          "items" : {
            "$ref" : "#/definitions/The order item"
          }
        }
      }
    },
    "TicketStatusDTO" : {
      "type" : "object",
      "required" : [ "id", "name", "order" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 64
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        }
      }
    },
    "The ticket status registration request" : {
      "type" : "object",
      "required" : [ "name", "order" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 64
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        }
      }
    },
    "The ticket status update request" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 64
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 128
        }
      }
    }
  }
}