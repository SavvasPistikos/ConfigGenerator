{
  "swagger" : "2.0",
  "info" : {
    "description" : "Below you can find the API documentation for operations of Information Store.",
    "version" : "1.0",
    "title" : "Information Store",
    "contact" : {
      "name" : "Intralot S.A. "
    }
  },
  "basePath" : "/api",
  "tags" : [ {
    "name" : "Draw operations V3.0 (OPAP)"
  }, {
    "name" : "Draw update operations V1.0"
  }, {
    "name" : "Highest Prizes operations V1.0"
  }, {
    "name" : "Game operations V1.0 (OPAP)"
  }, {
    "name" : "Entity state operations"
  }, {
    "name" : "Subscriber operations"
  } ],
  "paths" : {
    "/opap/v3.0/draws/active" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get active draws",
        "description" : "Get all active draws for all games",
        "operationId" : "getActiveDrawsOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 180,
          "minimum" : 1
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting order. Options: asc, desc. Default is desc.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "column",
          "in" : "query",
          "description" : "Sorting column. Options: gameId, drawId, drawTime, status, visualDraw.",
          "required" : false,
          "type" : "string",
          "default" : "gameId"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDrawV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/last-result-and-active" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get the last draw with results or pending results and the active draw for a game.",
        "description" : "Get the last draw with results or pending results and the active draw for a game. includeAnimation parameter can be used to force the retrieval of animation for the last resulted draw.",
        "operationId" : "getLastAndActiveDrawsOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "includeAnimation",
          "in" : "query",
          "description" : "Parameter to force inclusion of animation object",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status in which the last draws should be. By default results and pendingResults are returned.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LastResultDrawAndActiveV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "404" : {
            "description" : "NOT FOUND",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/last/{limit}" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get last draws for a game",
        "description" : "Get last draws for a game. By default the active draw is included in the response if it exists.",
        "operationId" : "getLastDrawsOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "Limit, the number of total draws",
          "required" : true,
          "type" : "integer",
          "maximum" : 100,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "includeActive",
          "in" : "query",
          "description" : "Whether to include the active draw if it exists",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status in which the last draws should be. By default results and pendingResults are returned.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DrawV3Variation"
              }
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/upcoming/{limit}" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get upcoming draws for a game",
        "description" : "Get upcoming(future) draws for a game and optionally the active one. By default the active draw is included in the response if it exists.",
        "operationId" : "getUpcomingDrawsOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "Limit, the number of total draws",
          "required" : true,
          "type" : "integer",
          "maximum" : 100,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "includeActive",
          "in" : "query",
          "description" : "Whether to include the active draw if it exists",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DrawV3Variation"
              }
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/active" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get the active draw for a game",
        "description" : "Get the active draw for a game",
        "operationId" : "getActiveDrawForGameOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DrawV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/draw-date/{fromDate}/{toDate}" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get draws for a game by date range",
        "description" : "Get draws for a game by date range.",
        "operationId" : "getDrawsForGameByDateOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "fromDate",
          "in" : "path",
          "description" : "The from date filter. Must be in 'yyyy-MM-dd' format.",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }, {
          "name" : "toDate",
          "in" : "path",
          "description" : "The to date filter. Must be in 'yyyy-MM-dd' format.",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }, {
          "name" : "timezone",
          "in" : "header",
          "description" : "The timezone in which the date filters were provided. Default is UTC.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filter draws by status, multiple statuses filters allowed. By default results status is used.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "future", "active", "completed", "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 180,
          "minimum" : 1
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting order. Options: asc, desc. Default is desc.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "column",
          "in" : "query",
          "description" : "Sorting column. Options: gameId, drawId, drawTime, status, visualDraw.",
          "required" : false,
          "type" : "string",
          "default" : "drawId"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDrawV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/draw-date/{fromDate}/{toDate}/draw-id" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get draw ids for a game by date range",
        "description" : "Get draw ids for a game by date range.",
        "operationId" : "getDrawIdsForGameByDateOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "fromDate",
          "in" : "path",
          "description" : "The from date filter. Must be in 'yyyy-MM-dd' format.",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }, {
          "name" : "toDate",
          "in" : "path",
          "description" : "The to date filter. Must be in 'yyyy-MM-dd' format.",
          "required" : true,
          "type" : "string",
          "pattern" : "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }, {
          "name" : "timezone",
          "in" : "header",
          "description" : "The timezone in which the date filters were provided. Default is UTC.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filter draws by status, multiple statuses filters allowed. By default results status is used.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "future", "active", "completed", "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/draw-id/{fromDrawId}/{toDrawId}" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get draws for a game by draw id range",
        "description" : "Get draws for a game using a draw number range.",
        "operationId" : "getDrawsForGameOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "fromDrawId",
          "in" : "path",
          "description" : "The start draw id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "toDrawId",
          "in" : "path",
          "description" : "The end draw id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filter draws by status, multiple statuses filters allowed. By default results status is used.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "future", "active", "completed", "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 180,
          "minimum" : 1
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting order. Options: asc, desc. Default is desc.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "column",
          "in" : "query",
          "description" : "Sorting column. Options: gameId, drawId, drawTime, status, visualDraw.",
          "required" : false,
          "type" : "string",
          "default" : "drawId"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDrawV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/{drawId}" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get draw",
        "description" : "Get draw for a game by draw id",
        "operationId" : "getDrawForGameOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "drawId",
          "in" : "path",
          "description" : "Draw identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status filter. If the draw found is not in one of the specified statuses, the response will be empty. Multiple statuses filters allowed. By default no status filter is applied.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "future", "active", "completed", "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "includeAnimation",
          "in" : "query",
          "description" : "Parameter to force inclusion of animation object",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DrawV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "404" : {
            "description" : "NOT FOUND",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v3.0/draws/{gameId}/visual-draw/{visualDraw}" : {
      "get" : {
        "tags" : [ "Draw operations V3.0 (OPAP)" ],
        "summary" : "Get draw for a game by visual draw number",
        "description" : "Get draw for a game by visual draw number. The visual draw number depending on the game is either the same as the draw id, or is a number where the first four digits denote the year and the rest digits a yearly recurring draw number.",
        "operationId" : "getDrawForGameByVisualDrawOPAP",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "visualDraw",
          "in" : "path",
          "description" : "Visual draw number",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status filter. If the draw found is not in one of the specified statuses, the response will be empty. Multiple statuses filters allowed. By default no status filter is applied.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "future", "active", "completed", "pendingResults", "results" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Etag",
          "in" : "header",
          "description" : "Etag header, check https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DrawV3Variation"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "404" : {
            "description" : "NOT FOUND"
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/v1.0/draws/{gameId}/{drawId}" : {
      "put" : {
        "tags" : [ "Draw update operations V1.0" ],
        "summary" : "Register or update a draw",
        "description" : "",
        "operationId" : "registerOrUpdateV1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "drawId",
          "in" : "path",
          "description" : "Draw identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "providerId",
          "in" : "header",
          "description" : "Provider identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "stateId",
          "in" : "header",
          "description" : "State identifier used for idempotency",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InfoStoreDrawUpdateRequestV1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/InfoStoreDrawV1DTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/v1.0/highest-prizes/{gameId}/{drawId}" : {
      "post" : {
        "tags" : [ "Highest Prizes operations V1.0" ],
        "summary" : "Add batch of highest prizes for specific game and draw",
        "description" : "A batch may contain from 1 to 500 highest prizes",
        "operationId" : "addBatchOfHighestPrizes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "drawId",
          "in" : "path",
          "description" : "Draw identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "batchId",
          "in" : "query",
          "description" : "Batch identifier. Starting from 1.",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/HighestPrizeRequestDTO"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Highest Prizes operations V1.0" ],
        "summary" : "Delete highest prizes for specific game and draw",
        "description" : "",
        "operationId" : "deletePrizesForGameAndDraw",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "Game identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "drawId",
          "in" : "path",
          "description" : "Draw identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/opap/v1.0/games/{gameId}/highest-prize" : {
      "get" : {
        "tags" : [ "Game operations V1.0 (OPAP)" ],
        "summary" : "Get highest prizes for a game by draw id or draw date ranges",
        "description" : "",
        "operationId" : "findHighestPrizeAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "The from date filter. Must be in 'yyyy-MM-dd' format.",
          "required" : false,
          "type" : "string",
          "pattern" : "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "The to date filter. Must be in 'yyyy-MM-dd' format.",
          "required" : false,
          "type" : "string",
          "pattern" : "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }, {
          "name" : "timezone",
          "in" : "header",
          "description" : "The timezone in which the date filters were provided. Default is UTC.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromDrawId",
          "in" : "query",
          "description" : "The start draw id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "toDrawId",
          "in" : "query",
          "description" : "The end draw id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100,
          "minimum" : 1
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting order. Options: asc, desc. Default is desc.",
          "required" : false,
          "type" : "string",
          "default" : "desc"
        }, {
          "name" : "column",
          "in" : "query",
          "description" : "Sorting column. Options: amount, drawId.",
          "required" : false,
          "type" : "string",
          "default" : "drawId"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PageHighestPrizeDTO"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v1.0/games/custom-statistics/kinoStats" : {
      "get" : {
        "tags" : [ "Game operations V1.0 (OPAP)" ],
        "summary" : "Get custom statistics for Kino",
        "description" : "",
        "operationId" : "getKenoStatsInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KenoStatsRes"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/opap/v1.0/games/custom-statistics/kinoStats3" : {
      "get" : {
        "tags" : [ "Game operations V1.0 (OPAP)" ],
        "summary" : "Get extended custom statistics for Kino, it includes side bets.",
        "description" : "",
        "operationId" : "getKenoStats3Info",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "property",
          "in" : "query",
          "description" : "Specifies which properties to include, by default all properties are included in the response",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/KenoStats3Res"
            }
          },
          "304" : {
            "description" : "NOT MODIFIED"
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/v1.0/states/{stateId}/entity" : {
      "get" : {
        "tags" : [ "Entity state operations" ],
        "summary" : "Get entity by state id",
        "description" : "Get entity by state id. It contains only the entity body.",
        "operationId" : "getEntityState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stateId",
          "in" : "path",
          "description" : "State identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "subscriberId",
          "in" : "query",
          "description" : "Subscriber id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "404" : {
            "description" : "NOT FOUND"
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/v1.0/states" : {
      "get" : {
        "tags" : [ "Entity state operations" ],
        "summary" : "Get entity states",
        "description" : "Get paginated entity states. From and to parameters are optional and allow to retrieve a subset of entity states.",
        "operationId" : "getEntityStates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "description" : "The start state id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end state id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "subscriberId",
          "in" : "query",
          "description" : "Subscriber id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 100,
          "minimum" : 1
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting order. Options: asc, desc. Default is asc.",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        }, {
          "name" : "column",
          "in" : "query",
          "description" : "Sorting column. Options: stateId",
          "required" : false,
          "type" : "string",
          "default" : "stateId"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageEntityStateDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/v1.0/states/{stateId}" : {
      "get" : {
        "tags" : [ "Entity state operations" ],
        "summary" : "Get entity state by state id",
        "description" : "Get entity by state id. It contains the entity body as well as a container object that stores the state id and the namespace.",
        "operationId" : "getState",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stateId",
          "in" : "path",
          "description" : "State identifier",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "subscriberId",
          "in" : "query",
          "description" : "Subscriber id",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/EntityStateDTO"
            }
          },
          "400" : {
            "description" : "VALIDATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "404" : {
            "description" : "NOT FOUND"
          },
          "500" : {
            "description" : "APPLICATION ERROR",
            "schema" : {
              "$ref" : "#/definitions/FaultInfo"
            }
          },
          "502" : {
            "description" : "BAD GATEWAY"
          },
          "503" : {
            "description" : "SERVICE UNAVAILABLE"
          }
        }
      }
    },
    "/v1.0/subscribers" : {
      "get" : {
        "tags" : [ "Subscriber operations" ],
        "summary" : "Get subscribers",
        "description" : "",
        "operationId" : "findAllSubscriber",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "query",
          "description" : "Filter by subscriberId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter by name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gameIds",
          "in" : "query",
          "description" : "Filter by gameIds",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "entities",
          "in" : "query",
          "description" : "Filter by entities",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "draw", "transactions", "validations" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "column",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "subscriberId"
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "asc"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SubscriberDTO"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Subscriber operations" ],
        "summary" : "Register a subscriber",
        "description" : "",
        "operationId" : "registerSubscriber",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The subscriber data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SubscriberRegistrationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubscriberDTO"
            }
          }
        }
      }
    },
    "/v1.0/subscribers/{subscriberId}" : {
      "put" : {
        "tags" : [ "Subscriber operations" ],
        "summary" : "Update a subscriber",
        "description" : "",
        "operationId" : "updateSubscriber",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "The subscriber id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The subscriber data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SubscriberUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SubscriberDTO"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscriber operations" ],
        "summary" : "Delete a subscriber",
        "description" : "",
        "operationId" : "deleteSubscriber",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "The subscriber id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "AddOnPricePointsV3VariationDTO" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "gameType" : {
          "type" : "string"
        }
      }
    },
    "AddOnWagerStatisticsDTO" : {
      "type" : "object",
      "required" : [ "columns" ],
      "properties" : {
        "columns" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total columns of the add-on game"
        },
        "wagers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total wagers of the add-on game"
        },
        "gameType" : {
          "type" : "string",
          "description" : "Game type"
        }
      }
    },
    "DrawAnimationV3VariationDTO" : {
      "type" : "object",
      "properties" : {
        "startTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Denotes in UTC the timestamp that an animation starts"
        },
        "endTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Denotes in UTC the timestamp that an animation ends"
        },
        "steps" : {
          "type" : "array",
          "description" : "Denotes the list of steps before a number is finally marked as a winning one. Note that maximum X steps are specified before reaching an actual winning number",
          "items" : {
            "$ref" : "#/definitions/StepV3Variation"
          }
        }
      }
    },
    "DrawResultV3Variation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The unique id of the result"
        },
        "divident" : {
          "type" : "number",
          "format" : "double",
          "description" : "Divident amount per winner of category"
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of category winners"
        },
        "distributed" : {
          "type" : "number",
          "format" : "double",
          "description" : "Distributed amount to all winners of category (net amount)"
        },
        "jackpot" : {
          "type" : "number",
          "format" : "double",
          "description" : "Jackpot amount of category"
        },
        "fixed" : {
          "type" : "number",
          "format" : "double",
          "description" : "Fixed winning amount of category"
        },
        "categoryType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The type of category. 0:NormalDividend, 1:FixedAmount, 2:FixedOdds, 3:DividendSharedWithOther, 4:PromotionWinner, 5:ProgressiveJackpot"
        },
        "promotionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Promotion id of category. It will be null if not applicable."
        },
        "gameType" : {
          "type" : "string",
          "description" : "The game type related to the category. Values: Exact/Any for Super 3, Kino/KinoBonus/OddEven/Column for Kino, Normal for rest of the games."
        },
        "minimumDistributed" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum distributed amount to all winners of category (net amount). It applies for Joker, Lotto, Proto and Propo/Propogoal and it is serialized only for the closest active draw of those games."
        }
      }
    },
    "DrawV3Variation" : {
      "type" : "object",
      "required" : [ "drawBreak", "drawId", "drawTime", "gameId", "pricePoints", "prizeCategories", "status", "visualDraw" ],
      "properties" : {
        "gameId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Game code"
        },
        "drawId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Draw number"
        },
        "drawTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Draw time in UTC in milliseconds"
        },
        "status" : {
          "type" : "string",
          "description" : "Draw status (enumeration)",
          "enum" : [ "future", "active", "completed", "pendingResults", "results" ]
        },
        "drawBreak" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Draw break in milliseconds"
        },
        "visualDraw" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Visual draw number, a recurring draw number"
        },
        "pricePoints" : {
          "description" : "Price points",
          "$ref" : "#/definitions/PricePointsV3VariationDTO"
        },
        "winningNumbers" : {
          "description" : "Winning numbers information",
          "$ref" : "#/definitions/WinningNumbersV3VariationDTO"
        },
        "prizeCategories" : {
          "type" : "array",
          "description" : "Prize categories",
          "items" : {
            "$ref" : "#/definitions/DrawResultV3Variation"
          }
        },
        "wagerStatistics" : {
          "description" : "Wager statistics",
          "$ref" : "#/definitions/WagerStatisticsDTO"
        },
        "animation" : {
          "description" : "Draw animation. Provides centralized information on how the draw should be animated. It is not available on all games and it is not included by default.",
          "$ref" : "#/definitions/DrawAnimationV3VariationDTO"
        }
      }
    },
    "Page" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "first" : {
          "type" : "boolean"
        },
        "last" : {
          "type" : "boolean"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PageDrawV3Variation" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DrawV3Variation"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean"
        },
        "last" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        }
      }
    },
    "PricePointsV3VariationDTO" : {
      "type" : "object",
      "properties" : {
        "addOn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddOnPricePointsV3VariationDTO"
          }
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "SideBetsWinningNumbersDTO" : {
      "type" : "object",
      "properties" : {
        "evenNumbersCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "oddNumbersCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "winningColumn" : {
          "type" : "integer",
          "format" : "int32"
        },
        "winningParity" : {
          "type" : "string",
          "enum" : [ "odd", "even", "draw" ]
        },
        "oddNumbers" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "evenNumbers" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "columnNumbers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      }
    },
    "Sort" : {
      "type" : "object"
    },
    "StepV3Variation" : {
      "type" : "object",
      "properties" : {
        "bonusNumber" : {
          "type" : "boolean"
        },
        "hopToNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sideBets" : {
          "$ref" : "#/definitions/SideBetsWinningNumbersDTO"
        },
        "winningNumber" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Denotes whether the API consumer should mark at this specific step the number as part of the winning ones. If false, then an additional step is expected for that winning number"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Duration of step in milliseconds"
        }
      }
    },
    "WagerStatisticsDTO" : {
      "type" : "object",
      "required" : [ "columns" ],
      "properties" : {
        "columns" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total columns of the primary game excluding the ones for the add-ons"
        },
        "wagers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Total wagers including both primary game wagers and add-ons wagers"
        },
        "addOn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddOnWagerStatisticsDTO"
          }
        }
      }
    },
    "WinningNumbersV3VariationDTO" : {
      "type" : "object",
      "properties" : {
        "list" : {
          "type" : "array",
          "description" : "Winning numbers list",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "bonus" : {
          "type" : "array",
          "description" : "Bonus number",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "sidebets" : {
          "description" : "Winning sidebets",
          "$ref" : "#/definitions/SideBetsWinningNumbersDTO"
        }
      }
    },
    "FaultInfo" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The error code"
        },
        "message" : {
          "type" : "string",
          "description" : "The error message"
        },
        "data" : {
          "type" : "array",
          "description" : "The error data which is an abstract object that may be used to provide any error metadata",
          "items" : {
            "type" : "object"
          }
        },
        "source" : {
          "type" : "string",
          "description" : "The application at which the API error occured"
        },
        "type" : {
          "type" : "string",
          "description" : "The error family, e.g. RUNTIME, VALIDATION, etc"
        },
        "guid" : {
          "type" : "string",
          "description" : "The unique identifier of the error process"
        }
      },
      "description" : "The FaultInfo object contains all the details assosiated with an API error"
    },
    "LastResultDrawAndActiveV3Variation" : {
      "type" : "object",
      "properties" : {
        "last" : {
          "$ref" : "#/definitions/DrawV3Variation"
        },
        "active" : {
          "$ref" : "#/definitions/DrawV3Variation"
        }
      }
    },
    "AddOnPricePointsV1DTO" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "gameType" : {
          "type" : "string"
        }
      }
    },
    "InfoStoreDrawResultsV1DTO" : {
      "type" : "object",
      "required" : [ "bonusAmount", "distributedAmount", "dividentAmount", "id", "jackpotAmount", "minimumDistributed", "netDividentAmount", "roundingAmount", "taxationAmount", "tierLevel", "tierType", "winners" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The unique id of the result",
          "minimum" : 1
        },
        "tierType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of total picks for tier ie. 1/10, 2/10, 3/10 where 10 is the tier type",
          "minimum" : 1
        },
        "tierLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of winning bets for tier ie. 1/10, 2/10, 3/10 where 1,2,3 is the tier level",
          "minimum" : 0
        },
        "distributedAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Distributed amount to all winners of category",
          "minimum" : 0
        },
        "dividentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Gross divident amount per winner of category",
          "minimum" : 0
        },
        "taxationAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Taxation amount per winner of category",
          "minimum" : 0
        },
        "roundingAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Rounding amount per winner of category",
          "minimum" : 0
        },
        "bonusAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Bonus amount per winner of category",
          "minimum" : 0
        },
        "jackpotAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Jackpot amount per winner of category",
          "minimum" : 0
        },
        "netDividentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Net divident amount per winner of category",
          "minimum" : 0
        },
        "winners" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of category winners",
          "minimum" : 0
        },
        "fixedAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Fixed winning amount per winner of category"
        },
        "categoryType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The type of category. 0:NormalDividend, 1:FixedAmount, 2:FixedOdds, 3:DividendSharedWithOther, 4:PromotionWinner, 5:ProgressiveJackpot"
        },
        "promotionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The promotion id of category"
        },
        "gameType" : {
          "type" : "string",
          "description" : "The game type related to the category."
        },
        "minimumDistributed" : {
          "type" : "number",
          "format" : "double",
          "description" : "Minimum distributed amount per winner of category",
          "minimum" : 0
        }
      }
    },
    "InfoStoreDrawV1DTO" : {
      "type" : "object",
      "required" : [ "drawBreak", "drawId", "drawTime", "gameId", "gameRuleVersion", "pricePoints", "status", "visualDraw", "winningRevision" ],
      "properties" : {
        "gameId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Game code"
        },
        "drawId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Draw number"
        },
        "drawTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Draw time in UTC in milliseconds"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Draw status"
        },
        "drawBreak" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Draw break in milliseconds"
        },
        "visualDraw" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Visual draw"
        },
        "gameRuleVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Game rule version"
        },
        "pricePoints" : {
          "description" : "Price points of the draw main game and addons",
          "$ref" : "#/definitions/PricePointsV1DTO"
        },
        "winningNumbers" : {
          "type" : "array",
          "description" : "Array of winning numbers corresponding to winning column. List of String where each String corresponds to the winning numbers ofeach winning column. Winning numbers of each winning column should be comma separated.",
          "items" : {
            "type" : "string"
          }
        },
        "prizeCategories" : {
          "type" : "array",
          "description" : "Prize categories",
          "items" : {
            "$ref" : "#/definitions/InfoStoreDrawResultsV1DTO"
          }
        },
        "winningRevision" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Winning revision"
        },
        "activationTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time that the draw was activated"
        },
        "wagerStatistics" : {
          "type" : "array",
          "description" : "Wager statistics",
          "items" : {
            "$ref" : "#/definitions/InfoStoreDrawWagerStatisticsV1DTO"
          }
        },
        "drawType" : {
          "type" : "string",
          "description" : "DAY or EVE indicator. Applicable only for games that have day and eve draws"
        }
      }
    },
    "InfoStoreDrawWagerStatisticsV1DTO" : {
      "type" : "object",
      "required" : [ "columns", "wagerType" ],
      "properties" : {
        "wagerType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Wager type. 1:Play 2:Cancel?"
        },
        "columns" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total columns"
        },
        "wagers" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total wagers"
        },
        "gameType" : {
          "type" : "string"
        }
      }
    },
    "PricePointsV1DTO" : {
      "type" : "object",
      "properties" : {
        "addOn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddOnPricePointsV1DTO"
          }
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "InfoStoreDrawUpdateRequestV1" : {
      "type" : "object",
      "required" : [ "drawBreak", "drawTime", "gameRuleVersion", "pricePoints", "status", "visualDraw", "winningRevision" ],
      "properties" : {
        "drawTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Draw time in UTC in milliseconds"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Draw status"
        },
        "drawBreak" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Draw break in milliseconds"
        },
        "visualDraw" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Visual draw"
        },
        "gameRuleVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Game rule version"
        },
        "pricePoints" : {
          "description" : "Price points of the draw main game and addons",
          "$ref" : "#/definitions/PricePointsV1DTO"
        },
        "winningNumbers" : {
          "type" : "array",
          "description" : "Array of winning numbers corresponding to winning column. List of String where each String corresponds to the winning numbers ofeach winning column. Winning numbers of each winning column should be comma separated.",
          "items" : {
            "type" : "string"
          }
        },
        "prizeCategories" : {
          "type" : "array",
          "description" : "Prize categories",
          "items" : {
            "$ref" : "#/definitions/InfoStoreDrawResultsV1DTO"
          }
        },
        "winningRevision" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Winning revision"
        },
        "activationTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time that the draw was activated"
        },
        "wagerStatistics" : {
          "type" : "array",
          "description" : "Wager statistics",
          "items" : {
            "$ref" : "#/definitions/InfoStoreDrawWagerStatisticsV1DTO"
          }
        },
        "drawType" : {
          "type" : "string",
          "description" : "DAY or EVE indicator. Applicable only for games that have day and eve draws"
        }
      }
    },
    "HighestPrizeRequestDTO" : {
      "type" : "object",
      "required" : [ "amount", "id", "retailerAddress", "retailerId", "wagerCost", "winningDate" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Denotes the prize id",
          "minimum" : 0
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Denotes the winning amount",
          "minimum" : 0
        },
        "wagerCost" : {
          "type" : "number",
          "format" : "double",
          "description" : "Denotes the cost of the relevant wager",
          "minimum" : 0
        },
        "retailerAddress" : {
          "type" : "string",
          "description" : "Denotes the address of the Retail store  where the wager with the highest prize was placed",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "retailerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Denotes the id of the Retail store where the wager with the highest prize was placed",
          "minimum" : 0
        },
        "winningDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Denotes the relevant date that the highest prize was won in UTC in milliseconds",
          "minimum" : 0
        }
      }
    },
    "HighestPrizeDTO" : {
      "type" : "object",
      "required" : [ "amount", "drawId", "retailerAddress", "retailerId", "wagerCost", "winningDate" ],
      "properties" : {
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Denotes the winning amount"
        },
        "drawId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Denotes the id of a specific draw"
        },
        "wagerCost" : {
          "type" : "number",
          "format" : "double",
          "description" : "Denotes the cost of the relevant wager"
        },
        "retailerAddress" : {
          "type" : "string",
          "description" : "Denotes the address of the Retail store  where the wager with the highest prize was placed"
        },
        "retailerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Denotes the id of the Retail store where the wager with the highest prize was placed"
        },
        "winningDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Denotes the relevant date that the highest prize was won in UTC in milliseconds"
        }
      }
    },
    "PageHighestPrizeDTO" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "first" : {
          "type" : "boolean"
        },
        "last" : {
          "type" : "boolean"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HighestPrizeDTO"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ArrayOfKenoStatsResCtgInfo" : {
      "type" : "object",
      "properties" : {
        "ctgInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CtgInfo"
          }
        }
      }
    },
    "ArrayOfKenoStatsResCtgInfoBonus" : {
      "type" : "object",
      "properties" : {
        "ctgInfoBonus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CtgInfoBonus"
          }
        }
      }
    },
    "ArrayOfKenoStatsResMinuteInfo" : {
      "type" : "object",
      "properties" : {
        "minuteInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MinuteInfo"
          }
        }
      }
    },
    "ArrayOfKenoStatsResNumInfo" : {
      "type" : "object",
      "properties" : {
        "numInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NumInfo"
          }
        }
      }
    },
    "ArrayOfKenoStatsResNumInfoBonusDelays" : {
      "type" : "object",
      "properties" : {
        "numInfoBonusDelays" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NumInfoBonusDelays"
          }
        }
      }
    },
    "ArrayOfKenoStatsResNumInfoBonusRepeats" : {
      "type" : "object",
      "properties" : {
        "numInfoBonusRepeats" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NumInfoBonusRepeats"
          }
        }
      }
    },
    "ArrayOfKenoStatsResPlaceInfo" : {
      "type" : "object",
      "properties" : {
        "placeInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlaceInfo"
          }
        }
      }
    },
    "ArrayOfKenoStatsResPrevDrawInfo" : {
      "type" : "object",
      "properties" : {
        "prevDrawInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrevDrawInfo"
          }
        }
      }
    },
    "ArrayOfKenoStatsResWinnerInfo" : {
      "type" : "object",
      "properties" : {
        "winnerInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WinnerInfo"
          }
        }
      }
    },
    "CtgInfo" : {
      "type" : "object",
      "properties" : {
        "sctg" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "ctg" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "amn" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "CtgInfoBonus" : {
      "type" : "object",
      "properties" : {
        "sctg" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "ctg" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "amn" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "KenoStatsRes" : {
      "type" : "object",
      "properties" : {
        "numsInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResNumInfo"
        },
        "numsInfoBonusDelays" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResNumInfoBonusDelays"
        },
        "numsInfoBonusRepeats" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResNumInfoBonusRepeats"
        },
        "minutesInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResMinuteInfo"
        },
        "ctgsInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResCtgInfo"
        },
        "ctgsInfoBonus" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResCtgInfoBonus"
        },
        "winnersInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResWinnerInfo"
        },
        "placesInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResPlaceInfo"
        },
        "prevDrawsInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStatsResPrevDrawInfo"
        },
        "drawCD" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "drawTime" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "kenoStatsRes"
      }
    },
    "MinuteInfo" : {
      "type" : "object",
      "properties" : {
        "minutes" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "amn" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "NumInfo" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "repeats" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "delays" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "NumInfoBonusDelays" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "delays" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "NumInfoBonusRepeats" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "repeats" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "PlaceInfo" : {
      "type" : "object",
      "properties" : {
        "amn" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        },
        "place" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "PrevDrawInfo" : {
      "type" : "object",
      "properties" : {
        "winNums" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WinNums"
          }
        },
        "drawCD" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "drawTime" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winCol" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "oddEven" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "WinNums" : {
      "type" : "object",
      "properties" : {
        "orderID" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "winNum" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "isBonus" : {
          "type" : "boolean",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "WinnerInfo" : {
      "type" : "object",
      "properties" : {
        "amn" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBigWin" : {
      "type" : "object",
      "properties" : {
        "bigWin" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BigWin"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBonusBigWin" : {
      "type" : "object",
      "properties" : {
        "bigWin" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BigWin"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBonusDrawnNum" : {
      "type" : "object",
      "properties" : {
        "drawnNum" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DrawnNum"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBonusNumInfo" : {
      "type" : "object",
      "properties" : {
        "numInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NumInfo"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBonusTopDelay" : {
      "type" : "object",
      "properties" : {
        "topDelay" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopDelay"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBonusTopRepeat" : {
      "type" : "object",
      "properties" : {
        "topRepeat" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopRepeat"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoBonusTopWinner" : {
      "type" : "object",
      "properties" : {
        "topWinner" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopWinner"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoColumnItem" : {
      "type" : "object",
      "properties" : {
        "columnItem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ColumnItem"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoDrawnNum" : {
      "type" : "object",
      "properties" : {
        "drawnNum" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DrawnNum"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoTopDelay" : {
      "type" : "object",
      "properties" : {
        "topDelay" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopDelay"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoTopRepeat" : {
      "type" : "object",
      "properties" : {
        "topRepeat" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopRepeat"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResKenoTopWinner" : {
      "type" : "object",
      "properties" : {
        "topWinner" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopWinner"
          }
        }
      }
    },
    "ArrayOfKenoStats3ResPrevDrawInfo" : {
      "type" : "object",
      "properties" : {
        "prevDrawInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrevDrawInfo"
          }
        }
      }
    },
    "BigWin" : {
      "type" : "object",
      "properties" : {
        "winComb" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winAmount" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        },
        "area" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "dt" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "BonusVsKeno" : {
      "type" : "object",
      "properties" : {
        "drawTm" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "ColumnItem" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "repeats" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "delays" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "CurrDayDsb" : {
      "type" : "object",
      "properties" : {
        "fstDrawTm" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "lstDrawTm" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winAmount" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "DrawnNum" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "times" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "Keno" : {
      "type" : "object",
      "properties" : {
        "prevDayDsb" : {
          "$ref" : "#/definitions/PrevDayDsb"
        },
        "currDayDsb" : {
          "$ref" : "#/definitions/CurrDayDsb"
        },
        "drawnNums" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoDrawnNum"
        },
        "topDelays" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoTopDelay"
        },
        "topRepeats" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoTopRepeat"
        },
        "topWinners" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoTopWinner"
        },
        "topCombs" : {
          "$ref" : "#/definitions/TopCombs"
        },
        "winTcks" : {
          "$ref" : "#/definitions/WinTcks"
        },
        "oneRes" : {
          "$ref" : "#/definitions/OneRes"
        },
        "bigWins" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBigWin"
        },
        "columns" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoColumnItem"
        }
      }
    },
    "KenoBonus" : {
      "type" : "object",
      "properties" : {
        "numsInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBonusNumInfo"
        },
        "drawnNums" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBonusDrawnNum"
        },
        "topDelays" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBonusTopDelay"
        },
        "topRepeats" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBonusTopRepeat"
        },
        "currDayDsb" : {
          "$ref" : "#/definitions/CurrDayDsb"
        },
        "topWinners" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBonusTopWinner"
        },
        "topCombs" : {
          "$ref" : "#/definitions/TopCombs"
        },
        "bonusVsKeno" : {
          "$ref" : "#/definitions/BonusVsKeno"
        },
        "oneRes" : {
          "$ref" : "#/definitions/OneRes"
        },
        "bigWins" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResKenoBonusBigWin"
        }
      }
    },
    "KenoStats3Res" : {
      "type" : "object",
      "properties" : {
        "prevDrawsInfo" : {
          "$ref" : "#/definitions/ArrayOfKenoStats3ResPrevDrawInfo"
        },
        "keno" : {
          "$ref" : "#/definitions/Keno"
        },
        "kenoBonus" : {
          "$ref" : "#/definitions/KenoBonus"
        },
        "drawCD" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "drawTime" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      },
      "xml" : {
        "name" : "kenoStats3Res"
      }
    },
    "OneRes" : {
      "type" : "object",
      "properties" : {
        "oneResItem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OneResItem"
          }
        },
        "dt" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "OneResItem" : {
      "type" : "object",
      "properties" : {
        "winComb" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winAmount" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        },
        "area" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "PrevDayDsb" : {
      "type" : "object",
      "properties" : {
        "winAmount" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "TopComb" : {
      "type" : "object",
      "properties" : {
        "comb" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "TopCombs" : {
      "type" : "object",
      "properties" : {
        "topComb" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopComb"
          }
        },
        "drawTm" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "TopDelay" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "delays" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "TopRepeat" : {
      "type" : "object",
      "properties" : {
        "sign" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "repeats" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "TopWinner" : {
      "type" : "object",
      "properties" : {
        "drawTm" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winAmount" : {
          "type" : "number",
          "format" : "double",
          "xml" : {
            "attribute" : true
          }
        },
        "area" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "WinTcks" : {
      "type" : "object",
      "properties" : {
        "drawTm" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "winners" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "Serializable" : {
      "type" : "object"
    },
    "EntityStateDTO" : {
      "type" : "object",
      "properties" : {
        "stateId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "namespace" : {
          "type" : "string"
        },
        "draw" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "transactionsControl" : {
          "type" : "object"
        },
        "validationsState" : {
          "type" : "object"
        }
      }
    },
    "PageEntityStateDTO" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityStateDTO"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "first" : {
          "type" : "boolean"
        },
        "last" : {
          "type" : "boolean"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        }
      }
    },
    "SubscribableEntityOptions" : {
      "type" : "object",
      "properties" : {
        "variation" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SubscriberDTO" : {
      "type" : "object",
      "properties" : {
        "subscriberId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "entities" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "draw", "transactions", "validations" ]
          }
        },
        "gameIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "messageBody" : {
          "type" : "string",
          "enum" : [ "none", "notification", "entity" ]
        },
        "method" : {
          "type" : "string",
          "enum" : [ "rest" ]
        },
        "path" : {
          "type" : "string"
        },
        "httpMethod" : {
          "type" : "string"
        },
        "maxRetries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "retryInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "options" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/SubscribableEntityOptions"
          }
        }
      }
    },
    "SubscriberRegistrationRequest" : {
      "type" : "object",
      "required" : [ "messageBody", "method", "name", "path" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "entities" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "draw", "transactions", "validations" ]
          }
        },
        "gameIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "messageBody" : {
          "type" : "string",
          "enum" : [ "none", "notification", "entity" ]
        },
        "method" : {
          "type" : "string",
          "enum" : [ "rest" ]
        },
        "path" : {
          "type" : "string"
        },
        "httpMethod" : {
          "type" : "string",
          "pattern" : "^(GET|HEAD|POST|PUT|PATCH|DELETE|OPTIONS|TRACE)$"
        },
        "maxRetries" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 100
        },
        "retryInterval" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 500
        },
        "options" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/SubscribableEntityOptions"
          }
        }
      }
    },
    "SubscriberUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "entities" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "draw", "transactions", "validations" ]
          }
        },
        "gameIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "messageBody" : {
          "type" : "string",
          "enum" : [ "none", "notification", "entity" ]
        },
        "path" : {
          "type" : "string"
        },
        "httpMethod" : {
          "type" : "string",
          "pattern" : "^(GET|HEAD|POST|PUT|PATCH|DELETE|OPTIONS|TRACE)$"
        },
        "maxRetries" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 100
        },
        "retryInterval" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 500
        },
        "options" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/SubscribableEntityOptions"
          }
        }
      }
    }
  }
}