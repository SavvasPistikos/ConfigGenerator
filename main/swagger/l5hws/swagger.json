{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "High winning system of OPAP",
    "description": "High winning system api"
  },
  "basePath": "/lotoswebservice",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/claimed/coupons": {
      "post": {
        "summary": "api for lotos to communicate with high winning system for claimed coupons",
        "description": "High winning system can request a find success or report a payment or request for a rollback(future use) ",
        "parameters": [
          {
            "name": "inputData",
            "in": "body",
            "description": "Data required for the Lotto Play transaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimedCouponsdInputData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClaimedCouponsdReturnData"
            }
          },
          "500": {
            "description": "Error response",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "description": "error code"
                },
                "description": {
                  "type": "string",
                  "description": "Error message/additional details describing the error. LOtos may use this field to report additional info if available."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClaimedCouponsdInputData": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderObject"
        },
        "requestType": {
          "type": "integer",
          "description": "type of request.  0 = INQUIRE 1 = PAY BANK 2 = ROLLBACK (for future use) 3 = PAY PO"
        },
        "ticketId": {
          "type": "string",
          "description": "TICKET ID that identifies ticket in Lotos. In lotos maps to barcode"
        },
        "paymentId": {
          "type": "integer",
          "description": "Unique identifier of Bank claimed. Generated by HWS. maximum value of 2^63-1"
        },
        "timestamp": {
          "type": "integer",
          "description": "Timestamp of  event which triggers validateWinner service. (e.g. HWS back office action when PAY PO is requested). Used by HWS to report in bank reconciliation files when ticket was paid by PO."
        },
        "requestId": {
          "type": "string",
          "description": "The request identifier used to uniquely identify a transaction between the systems involved in the communication"
        }
      }
    },
    "ClaimedCouponsdReturnData": {
      "type": "object",
      "properties": {
        "ticketStatus": {
          "type": "integer",
          "description": "Lotos sends ticket status and HWS compares against local status. "
        },
        "grossWinnings": {
          "type": "number",
          "description": "Gross value of high winnings. In cents and EUR. Always positive."
        },
        "netWinnings": {
          "type": "number",
          "description": "Net value of high winnings. In cents and EUR. Always positive."
        },
        "taxWithheld": {
          "type": "number",
          "description": "Tax withheld from high winnings. In cents and EUR. Always positive."
        },
        "refund": {
          "type": "number",
          "description": "Any refunded amount in cents (on the Ticket level), currency is EUR."
        },
        "gameIdList": {
          "type": "array",
          "description": "Lottery: The gameIdList is filled with the amounts set in fields grossWinnings, netWinnings, taxWithheld. ",
          "items": {
            "type": "object",
            "properties": {
              "gameId": {
                "type": "integer",
                "description": "game id"
              },
              "grossWinnings": {
                "type": "number",
                "description": "Gross value of high winnings. In cents and EUR. Always positive."
              },
              "netWinnings": {
                "type": "number",
                "description": "Net value of high winnings. In cents and EUR. Always positive."
              },
              "taxWithheld": {
                "type": "number",
                "description": "Tax withheld from high winnings. In cents and EUR. Always positive."
              },
              "refund": {
                "type": "number",
                "description": "Any refunded amount in cents (on the Ticket level), currency is EUR."
              }
            }
          }
        }
      }
    },
    "HeaderObject": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "integer",
          "description": "As defined in LOTOS"
        },
        "transactionId": {
          "type": "integer",
          "description": "Unique ID that should be generated by the provider"
        },
        "transactionTime": {
          "type": "integer",
          "description": "Call time in UTC (seconds from '1/1/1970')"
        }
      },
      "required": [
        "providerId",
        "transactionId",
        "transactionTime"
      ]
    },
    "ReplyHeaderObject": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "integer",
          "description": "As defined in LOTOS"
        },
        "transactionId": {
          "type": "integer",
          "description": "Unique ID that should be generated by the provider"
        },
        "systemTime": {
          "type": "integer",
          "description": "System acceptance time in UTC (seconds from '1/1/1970')"
        },
        "result": {
          "type": "integer",
          "description": "Result code"
        },
        "commandPending": {
          "type": "integer",
          "description": "A flag that denotes if there is a pending message/command"
        }
      },
      "required": [
        "providerId",
        "transactionId",
        "systemTime",
        "result",
        "commandPending"
      ]
    }
  }
}